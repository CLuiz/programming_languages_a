(* first line is not polymorphic so next two lines do not type checkc *)
val r = ref None

	    (*
val _ = r := SOME "hi"
val i = 1 + valof (!r)
	    *)

type 'a foo = 'a ref
val f : 'a -> 'a foo = ref
val r2 = f NONE (* also need value restriction here *)

	   (* where the value restriction arises despite no mutation *)
val pairWithOne = List.mpa (fn x => (x, 1))

			   (* workaraound *)
fun pairWithOne2 xs = List.map (fn x => (x, 1)) xs

			       
	   